version: 0.2
env:
  shell: bash
phases:
  install:
    runtime-versions:
      python: 3.11
  build:
    commands:
      - echo "Packaging Lambda function source."
      - zip -j lambda.zip src/lambda_function.py
      - echo "Retrieving current alias version."
      - |
        set -euo pipefail
        current_version=$(aws lambda get-alias \
          --function-name "$LAMBDA_FUNCTION_NAME" \
          --name live \
          --query 'FunctionVersion' \
          --output text 2>/dev/null || echo "")
        if [[ -z "$current_version" || "$current_version" == "None" ]]; then
          echo "Alias 'live' not found or missing version; defaulting to 1."
          current_version="1"
        fi
        echo "Current alias version: $current_version"
        echo "Publishing new Lambda function version."
        target_version=$(aws lambda update-function-code \
          --function-name "$LAMBDA_FUNCTION_NAME" \
          --zip-file fileb://lambda.zip \
          --publish \
          --query 'Version' \
          --output text)
        if [[ -z "$target_version" || "$target_version" == "None" ]]; then
          echo "Failed to determine new Lambda version." >&2
          exit 1
        fi
        echo "New Lambda version: $target_version"
        printf 'CURRENT_VERSION=%s\n' "$current_version" > lambda_versions.env
        printf 'TARGET_VERSION=%s\n' "$target_version" >> lambda_versions.env
      - source lambda_versions.env
      - echo "Rendering CodeDeploy AppSpec."
      - |
        python - <<'PY'
        import os
        from pathlib import Path


        template_path = Path("codedeploy/appspec.yml.template")
        rendered_path = Path("appspec.yml")
        template = template_path.read_text(encoding="utf-8")
        rendered = (
            template
            .replace("${LAMBDA_FUNCTION_NAME}", os.environ["LAMBDA_FUNCTION_NAME"])
            .replace("${CURRENT_VERSION}", os.environ["CURRENT_VERSION"])
            .replace("${TARGET_VERSION}", os.environ["TARGET_VERSION"])
        )
        rendered_path.write_text(rendered, encoding="utf-8")
        PY
artifacts:
  files:
    - lambda.zip
    - appspec.yml
